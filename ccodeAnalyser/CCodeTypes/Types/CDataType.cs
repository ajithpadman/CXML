///////////////////////////////////////////////////////////
//  CDataType.cs
//  Implementation of the Class CDataType
//  Generated by Enterprise Architect
//  Created on:      15-Dez-2017 13:29:33
//  Original author: ajith.padman
///////////////////////////////////////////////////////////

using System.Collections.Generic;
namespace CCodeTypes.Types
{
    public class CDataType : CElement {

		/// <summary>
		/// Field members for the Enum Union and Struct types
		/// </summary>
		public List<CElement> Children;
		/// <summary>
		/// kind of the datatype
		/// </summary>
		public DataTypeKind Kind;
		/// <summary>
		/// no of array elements in case of Array type
		/// </summary>
		public int Multiplicity;
		/// <summary>
		/// reference to the uniqe ID of the parent
		/// the parent can be
		/// for typedef -> underlying type
		/// for pointer -> what it point to
		/// for Array -> array subelement
		/// </summary>
		public string Parent;
		/// <summary>
		/// qualifier of the type
		/// </summary>
		public Qualifier Qualifier = Qualifier.INVALID;
		/// <summary>
		/// Storage class of the type
		/// </summary>
		public StorageClass StorageClass = StorageClass.Invalid;

		public CDataType(){
            Children = new List<CElement>();


        }

		~CDataType(){

		}

	}//end CDataType

}//end namespace Types